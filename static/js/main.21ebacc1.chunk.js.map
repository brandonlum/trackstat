{"version":3,"sources":["components/Login.js","components/Header.js","components/Nav.js","components/ScorecardForm.js","components/Scorecards.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","user","username","state","password","console","log","id","handleLogin","handleChange","setState","defineProperty","target","name","value","token","bind","assertThisInitialized","react_default","a","createElement","Container","Card","Form","onSubmit","Row","Col","className","Input","placeholder","type","onChange","Component","Header","xs","Button","color","href","components_Login","Nav","activeTab","toggle","tab","Fragment","Navbar","react_router_dom","classnames","active","to","ScorecardForm","scorecard","course_name","date_played","front_par","back_par","total_par","front_nine_score","back_nine_score","combined_score","CardBody","CardTitle","FormGroup","Label","for","Scorecards","toggleForm","formVisibile","_this2","_this$props","handleDelete","handleUpdate","scorecards","map","components_ScorecardForm","key","outline","onClick","App","userLogin","getUser","fetch","concat","method","body","JSON","stringify","header","Accept","Content-Type","then","response","json","resJson","catch","error","headers","getScorecards","addScorecard","copyScorecards","toConsumableArray","unshift","formInputs","updateScorecard","deletedScorecard","filter","index","componentDidMount","components_Header","components_Nav","react_router","path","render","components_Scorecards","assign","React","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21ebacc1.chunk.js","sourcesContent":["import React, {Component} from 'react'\n// import {Redirect} from 'react-router-dom'\nimport {Container, Form, Input, Card, Row, Col} from 'reactstrap'\n\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            id: '',\n            username: '',\n            password: '',\n            token: ''\n            // ,\n            // redirect: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const user = {\n            username: this.state.username,\n            password: this.state.password\n        }\n        console.log('User from Loginjs',user)\n        console.log('Props User', this.props.user)\n        if (this.props.user) user.id = this.props.user.id\n        this.props.handleLogin(\n            event,\n            user\n        )\n    }\n\n\n\n    render() {\n        // const {from} = this.props.location.state || '/';\n        // const {redirect} = this.state;\n        return (\n            <Container>\n                <Card>\n                    <Form onSubmit={this.handleSubmit}>\n                        <Row>\n                            <Col className=\"p-0\">\n                                <Input\n                                    className=\"text-center\"\n                                    name=\"username\"\n                                    placeholder=\"Username\"\n                                    type=\"text\"\n                                    onChange={this.handleChange}\n                                />\n                            </Col>\n                            <Col className=\"p-0\">\n                                <Input\n                                    className=\"text-center\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    onChange={this.handleChange}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Input\n                                value=\"Login\"\n                                type=\"submit\"\n                            />\n                        </Row>\n                        \n                        \n                    </Form>\n                    <Row>\n                        <Input\n                            value=\"Register\"\n                            type=\"submit\"\n                        />\n                    </Row>\n                </Card>\n                {/* {redirect && (\n                    <Redirect to={from || `/user/{#this.state.id}`} />\n                )} */}\n            </Container>\n        );\n    }\n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n}\n\nexport default Login","import React, {Component} from 'react'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport Login from './Login.js'\n\nclass Header extends Component {\n    render () {\n        return (\n            <Container className=\"border-bottom\">\n                <Row>\n                    <Col xs=\"7\">\n                        <Button color=\"light\" href=\"/\">\n                            <h1>ScoreTracker</h1>Track all your scoring in one convenient location!\n                        </Button>\n                    </Col>\n                    <Col xs=\"5\">\n                        <Login\n                            handleLogin={this.props.handleLogin}\n                        />\n                    </Col>\n\n                </Row>\n            </Container>\n        )\n    }\n}\n\n\nexport default Header","import React, {Component} from 'react'\nimport {Navbar} from 'reactstrap'\nimport classnames from 'classnames'\nimport {Link} from 'react-router-dom'\n\n\nclass Nav extends Component {\n    state = {\n        activeTab: '1'\n    }\n\n    toggle = (tab) => {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            })\n        }\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Navbar>\n                    <Link className={classnames({active: this.state.activeTab === '1'})} to='/trackstat-client/profile'>\n                        Profile\n                    </Link>\n\n                    <Link className={classnames({active: this.state.activeTab === '2'})} to='/trackstat-client/scorecards'>\n                        Scorecards\n                    </Link>\n\n                    <Link className={classnames({active: this.state.activeTab === '3'})} to='/trackstat-client/scorecardform'>\n                        Scorecard Form\n                    </Link>\n                </Navbar>\n                {/* <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm=\"12\">\n\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent> */}\n\n\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default Nav","import React, {Component} from 'react'\nimport {Card, CardBody, CardTitle, Form, FormGroup, Label, Input} from 'reactstrap'\n\n\nclass ScorecardForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course_name: '',\n            date_played: '',\n            front_par: 0,\n            back_par: 0,\n            total_par: 0,\n            front_nine_score: 0,\n            back_nine_score: 0,\n            combined_score: 0\n        \n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    \n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const scorecard = {\n            course_name: this.state.course_name,\n            date_played: this.state.date_played,\n            front_par: this.state.front_par,\n            back_par: this.state.back_par,\n            total_par: this.state.total_par,\n            front_nine_score: this.state.front_nine_score,\n            back_nine_score: this.state.back_nine_score,\n            combined_score: this.state.combined_score\n        }\n        console.log('Props Scorecard', this.props.scorecard)\n        if (this.props.scorecard) scorecard.id = this.props.scorecard.id\n        this.props.handleSubmit(\n            event,\n            scorecard\n        )\n    }\n\n    // handleSubmit = (event) => {\n    //     event.preventDefault();\n    //     console.log(this.state.course_name, this.state.date_played,this.state.front_par,\n    //     this.state.back_par,\n    //     this.state.total_par,\n    //     this.state.front_nine_score,\n    //     this.state.back_nine_score,\n    //     this.state.combined_score)\n    // }\n\n    // handleSubmit = (event) => {\n    //     event.preventDefault();\n    //     // this.state.combined_score = this.state.front_nine_score + this.state.back_nine_score;\n    //     // this.state.total_par = this.state.front_par + this.state.back_par;\n    //     fetch('/scorecards', {\n    //         method: \"POST\",\n    //         body: JSON.stringify({\n    //             course_name: this.state.course_name,\n    //             date_played: this.state.date_dplayed,\n    //             front_par: this.state.front_par,\n    //             back_par: this.state.back_par,\n    //             total_par: this.state.total_par,\n    //             front_nine_score: this.state.front_nine_score,\n    //             back_nine_score: this.state.back_nine_score,\n    //             combined_score: this.state.combined_score\n    //         }),\n    //         headers: {\n    //             'Accept':'application/json, text/plain, */*',\n    //             'Content-Type': 'application/json'\n    //         }\n    //     })\n    //     .then(response => response.json())\n    //     .then(resJson => {\n    //         this.setState({\n    //             course_name: '',\n    //             date_played: '',\n    //             front_par: 0,\n    //             back_par: 0,\n    //             total_par: 0,\n    //             front_nine_score: 0,\n    //             back_nine_score: 0,\n    //             combined_score: 0\n    //         })\n    //         this.props.addScorecard(resJson)\n    //     })\n    //     .catch(error => console.error(error))\n    // }\n\n\n    render () {\n        return (\n            <Card className=\"m-5\">\n                <CardBody>\n                    <CardTitle><h2>Scorecard Form</h2></CardTitle>\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"course_name\">Course Name</Label>\n                            <Input \n                                type=\"text\" name=\"course_name\"\n                                onChange={this.handleChange} \n                                placeholder={this.state.course_name}\n                                value={this.state.course_name}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"date_played\">Date Played</Label>\n                            <Input \n                                type=\"date\" \n                                name=\"date_played\" \n                                onChange={this.handleChange} placeholder={this.state.date_played}\n                                value={this.state.date_played}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"front_par\">Front Nine Par Rating</Label>\n                            <Input \n                                type=\"number\" \n                                name=\"front_par\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.front_par}\n                                value={this.state.front_par}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"back_par\">Back Nine Par Rating</Label>\n                            <Input \n                                type=\"number\" \n                                name=\"back_par\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.back_par}\n                                value={this.state.back_par}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"front_nine\">Front Nine Score</Label>\n                            <Input \n                                type=\"number\" name=\"front_nine_score\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.front_nine_score}\n                                value={this.state.front_nine_score}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"back_nine\">Back Nine Score</Label>\n                            <Input \n                                type=\"number\" \n                                name=\"back_nine_score\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.back_nine_score}\n                                value={this.state.back_nine_score}\n                                />\n                        </FormGroup>\n\n                        <Input type=\"submit\" value={this.props.scorecard ? \"Update Scorecard\":\"Submit new Scorecard!\"}/>\n                    </Form>\n\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default ScorecardForm","import React, {Component} from 'react'\nimport {Card, CardBody, CardTitle, Button} from 'reactstrap'\nimport ScorecardForm from './ScorecardForm.js'\n\n\nclass Scorecards extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            formVisibile: false\n        }\n    }\n\n    toggleForm = () => {\n        this.setState({formVisibile: !this.state.formVisibile})\n    }\n\n    render () {\n        const {handleDelete, handleUpdate} = this.props\n        return (\n            <React.Fragment>\n                {\n                    this.props.scorecards.map(scorecard => \n                        this.state.formVisibile ? \n                        <ScorecardForm \n                            key={scorecard.id}\n                            scorecard={scorecard} \n                            handleSubmit={this.props.handleUpdate} \n                        />\n                        :\n                        <Card key={scorecard.id} className=\"m-5\">\n                            <CardTitle className=\"m-2\">\n                                <h3>{scorecard.course_name}</h3>\n                            </CardTitle>\n                            <CardBody className=\"container border mb-5\">\n                                <h5>Front Nine: {scorecard.front_nine_score}</h5>\n                                <p>Front Nine Par: {scorecard.front_par}</p>\n                                <h5>Back Nine: {scorecard.back_nine_score}</h5>\n                                <p>Back Nine Par: {scorecard.back_par}</p>\n\n                                <h5>Combined Score: {scorecard.combined_score}</h5>\n                                <p>Total Par: {scorecard.total_par}</p>\n                            </CardBody>\n                            <Button className=\"mr-5 ml-5\" outline color=\"warning\" onClick={this.toggleForm}>Edit</Button>\n                            <Button className=\"mr-5 ml-5\" outline color=\"danger\" onClick={() => handleDelete(scorecard)}>Delete</Button>\n                        </Card>\n                    )\n                }\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default Scorecards","import React from 'react';\nimport './App.css';\n// import {BASE_URL} from './constants.js'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header.js'\nimport Nav from './components/Nav.js'\nimport Scorecards from './components/Scorecards.js'\nimport ScorecardForm from './components/ScorecardForm.js'\n\nclass App extends React.Component {\n  state = {\n    scorecards: [],\n    userLogin: {\n      username: '',\n      password: '',\n      token: ''\n    }\n  }\n\n  getUser = (event, userLogin) => {\n    event.preventDefault();\n    fetch(`trackstat-client/users/${userLogin.id}`, {\n      method: \"GET\",\n      body: JSON.stringify(userLogin),\n      header: {\n        'Accept':'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(resJson => console.log(resJson))\n    .catch(error => console.error(error))\n  }\n\n  handleLogin = (event, userLogin) => {\n    event.preventDefault();\n    console.log('Handle Login', userLogin)\n    fetch(`trackstat-client/users/login`, {\n      method: \"POST\",\n      body: JSON.stringify(userLogin),\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(response => console.log(response))\n    .then(resJson => console.log('User Info', resJson))\n    // .then(resJson => {\n    //   this.setState({\n    //     userLogin: {\n    //       username: '',\n    //       password: '',\n    //       token: ''\n    //      }\n    //     // token: resJson.token\n    //   })\n    // })\n    .catch(error => console.error(error))\n  }\n\n  getScorecards = () => {\n    fetch(`trackstat-client/scorecards`)\n    .then(response => response.json())\n    // .then(resJson => console.log(resJson))\n    .then(resJson => this.setState({scorecards: resJson}))\n    .catch(error => console.error(error))\n  }\n\n  addScorecard = (scorecard) => {\n    const copyScorecards = [...this.state.scorecards]\n    copyScorecards.unshift(scorecard)\n    this.setState({\n      scorecards: copyScorecards\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event, formInputs) => {\n    event.preventDefault();\n    // this.state.combined_score = this.state.front_nine_score + this.state.back_nine_score;\n    // this.state.total_par = this.state.front_par + this.state.back_par;\n    fetch(`trackstat-client/scorecards`, {\n        method: \"POST\",\n        body: JSON.stringify({formInputs}),\n        headers: {\n            'Accept':'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(response => response.json())\n    .then(resJson => {\n        this.setState({\n          scorecards: [resJson, ...this.state.scorecards]\n        })\n        // this.props.addScorecard(resJson)\n    })\n    .catch(error => console.error(error))\n  }\n\n  handleUpdate = (event, formInputs) => {\n    event.preventDefault();\n    // this.state.combined_score = this.state.front_nine_score + this.state.back_nine_score;\n    // this.state.total_par = this.state.front_par + this.state.back_par;\n    fetch(`trackstat-client/scorecards/${formInputs.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({formInputs}),\n        headers: {\n            'Accept':'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(updateScorecard => this.getScorecards())\n    .catch(error => console.error(error))\n  }\n\n  handleDelete = (deletedScorecard) => {\n    fetch(`trackstat-client/scorecards/${deletedScorecard.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(json => {\n      this.setState(state => {\n        const scorecards = state.scorecards.filter((scorecard, index) => scorecard.id !== deletedScorecard.id)\n        return {\n          scorecards\n        }\n      })\n    })\n    .catch(error => console.error(error))\n  }\n\n\n  componentDidMount = () => {\n    this.getScorecards()\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        \n        <Header \n          handleLogin={this.handleLogin}\n        />\n        <Router>\n          <Nav />\n          {/* <Route path=\"/profile\" exact component={Profile} /> */}\n          <Route path=\"trackstat-client/scorecards\"\n          render = {(props) => \n            <Scorecards \n              {...props} \n              scorecards={this.state.scorecards}\n              handleDelete={this.handleDelete}\n              handleUpdate={this.handleUpdate}\n            />} \n          />\n          {/* <Route path=\"/newscorecard\" \n          render = {(props) => <CreateScorecard {...props} addScorecard={this.addScorecard}/>} /> */}\n\n          <Route path=\"trackstat-client/scorecardform\" \n          render = {(props) => <ScorecardForm {...props} handleSubmit={this.handleSubmit}\n          handleChange={this.handleChange}\n          />} />\n        </Router>\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}