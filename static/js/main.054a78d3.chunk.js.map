{"version":3,"sources":["constants.js","components/Login.js","components/Header.js","components/Profile.js","components/ScorecardForm.js","components/Scorecard.js","components/Scorecards.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["BASE_URL","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","event","preventDefault","fetch","method","body","JSON","stringify","user","username","state","password","headers","Accept","Content-Type","then","response","json","resJson","setState","getUser","console","log","catch","error","handleChange","defineProperty","target","name","value","bind","assertThisInitialized","react_default","a","createElement","Container","userInfo","id","CardBody","Row","Col","status","Form","onSubmit","handleLogout","Input","type","className","placeholder","onChange","href","Component","Header","xs","components_Login","handleLogin","Profile","Card","CardTitle","age","handicap","ScorecardForm","componentDidMount","scorecard","course_name","date_played","front_par","back_par","total_par","front_nine_score","back_nine_score","combined_score","Number","toString","user_id","toggleForm","FormGroup","Label","for","Scorecard","formVisibile","_this$props","handleDelete","handleUpdate","Fragment","components_ScorecardForm","key","Button","outline","color","onClick","Scorecards","scorecards","map","components_Scorecard","Nav","activeTab","toggle","tab","Navbar","react_router_dom","classnames","active","to","App","userLogin","concat","Authorization","token","getScorecards","addScorecard","copyScorecards","toConsumableArray","unshift","formInputs","updateScorecard","deletedScorecard","filter","index","_this2","components_Header","components_Nav","react_router","path","render","components_Profile","assign","components_Scorecards","React","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.054a78d3.chunk.js","sourcesContent":["// const BASE_URL = \"https://trackstat.herokuapp.com\"\nconst BASE_URL = \"http://localhost:3000\"\n\nexport {BASE_URL}","import React, {Component} from 'react'\nimport {BASE_URL} from '../constants.js'\n// import {Redirect} from 'react-router-dom'\nimport {Container, Form, Input, Card, CardBody, Row, Col} from 'reactstrap'\n\n\nclass Login extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        fetch(BASE_URL+`/users/login`, {\n            method: \"POST\",\n            body: JSON.stringify(\n                {\n                    user: {\n                        username: this.state.username,\n                        password: this.state.password\n                    }\n                } \n            ),\n            headers: {\n              'Accept': 'application/json, text/plain, */*',\n              'Content-Type': 'application/json'\n            }\n          })\n          .then(response => response.json())\n          .then(resJson => {\n              this.setState({\n                  username: '',\n                  password: ''\n              })\n              this.props.getUser(resJson)\n              console.log('User logged in')\n          })\n          .catch(error => console.error(error))\n    }\n\n\n\n    render() {\n        return (\n            <Container>\n                {this.props.userInfo.id? \n                    <CardBody>\n                        <Row>\n                            <Col>\n                                {this.props.userInfo.name}\n                            </Col>\n                            <Col>\n                                {this.props.userInfo.status}\n                            </Col>\n                        </Row>\n                        <Form onSubmit={this.props.handleLogout}>\n                            <Row>\n                                <Input\n                                    value=\"Logout\"\n                                    type=\"submit\"\n                                />\n                            </Row>\n                        </Form>\n                    </CardBody> \n                    :\n                    <Form onSubmit={this.handleSubmit}>\n                        <Row>{this.props.userInfo.name}</Row>\n                        <Row>\n                            <Col className=\"p-0\">\n                                <Input\n                                    className=\"text-center\"\n                                    name=\"username\"\n                                    placeholder=\"Username\"\n                                    type=\"text\"\n                                    onChange={this.handleChange}\n                                    value={this.state.username}\n                                />\n                            </Col>\n                            <Col className=\"p-0\">\n                                <Input\n                                    className=\"text-center\"\n                                    placeholder=\"Password\"\n                                    name=\"password\"\n                                    type=\"password\"\n                                    onChange={this.handleChange}\n                                    value={this.state.password}\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"p-0\">\n                                <Input\n                                    value=\"Login\"\n                                    type=\"submit\"\n                                />\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col className=\"p-0\">\n                                <a className=\"btn\" href=\"/register\">Register</a>\n                            </Col>\n                        </Row>\n                    </Form>\n\n                }\n            </Container>\n        );\n    }\n\n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n}\n\nexport default Login","import React, {Component} from 'react'\nimport {Container, Row, Col, Button} from 'reactstrap'\nimport Login from './Login.js'\n\nclass Header extends Component {\n    render () {\n        return (\n            <Container className=\"border-bottom\">\n                {this.props.userInfo.id?\n                    <Row>\n                        <Col xs=\"8\">\n                            <a className=\"appname-header\" href=\"/trackstat\">\n                                <h1>\n                                    ScoreTracker\n                                </h1>\n                                <p>Track all your scoring in one convenient location!</p>\n                            </a>\n                        </Col>\n                        <Col xs=\"4\">\n                            <Login\n                                handleLogin={this.props.handleLogin}\n                                handleLogout={this.props.handleLogout}\n                                getUser={this.props.getUser}\n                                userInfo={this.props.userInfo}\n                            />\n                        </Col>\n                    </Row>\n                    :\n                    <Row>\n                        <Col xs=\"12\">\n                            <a className=\"appname-header\" id=\"appname-header-logged-out\" href=\"/trackstat\">\n                                <h1>\n                                    ScoreTracker\n                                </h1>\n                                <p>Track all your scoring in one convenient location!</p>\n                            </a>\n                        </Col>\n                    </Row>\n                    \n                }\n            </Container>\n        )\n    }\n}\n\n\nexport default Header","import React, {Component} from 'react'\nimport {Card, CardTitle, CardBody} from 'reactstrap'\n\nclass Profile extends Component {\n    constructor(props) {\n        super(props) \n        this.state = {\n\n        }\n    }\n    render () {\n        return (\n            <Card>\n                <CardTitle>\n                    <h1>{this.props.userInfo.name}</h1>\n                </CardTitle>\n                <CardBody>\n                    <h3>Username: <small>{this.props.userInfo.username}</small></h3>\n                    <h3>Age: <small>{this.props.userInfo.age}</small></h3>\n                    <h3>Handicap: <small>{this.props.userInfo.handicap}</small></h3>\n                    <h3>Status: <small>{this.props.userInfo.status}</small></h3>\n                    \n                </CardBody>\n\n            </Card>\n        )\n    }\n}\n\nexport default Profile","import React, {Component} from 'react'\nimport {Card, CardBody, CardTitle, Form, FormGroup, Label, Input} from 'reactstrap'\n\n\nclass ScorecardForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            course_name: '',\n            date_played: '',\n            front_par: 0,\n            back_par: 0,\n            total_par: 0,\n            front_nine_score: 0,\n            back_nine_score: 0,\n            combined_score: 0\n        \n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    componentDidMount = () => {\n        if (this.props.scorecard) {\n          this.setState({\n            course_name: this.props.scorecard.course_name,\n            date_played: this.props.scorecard.date_played,\n            front_par: this.props.scorecard.front_par,\n            back_par: this.props.scorecard.back_par,\n            total_par: this.props.scorecard.total_par,\n            front_nine_score: this.props.scorecard.front_nine_score,\n            back_nine_score: this.props.scorecard.back_nine_score,\n            combined_score: this.props.scorecard.combined_score\n          })\n        }\n      }\n    \n    handleChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(this.props.userInfo);\n        let total_par = (Number(this.state.front_par) + Number(this.state.back_par)).toString()\n        let combined_score = (Number(this.state.front_nine_score) + Number(this.state.back_nine_score)).toString()\n        const scorecard = {\n            course_name: this.state.course_name,\n            date_played: this.state.date_played,\n            front_par: this.state.front_par,\n            back_par: this.state.back_par,\n            total_par: total_par,\n            front_nine_score: this.state.front_nine_score,\n            back_nine_score: this.state.back_nine_score,\n            combined_score: combined_score,\n            user_id: this.props.userInfo.id\n        }\n\n        console.log('Scorecard', scorecard)\n        console.log('Props Scorecard', this.props.scorecard)\n        if (this.props.scorecard) {\n            scorecard.id = this.props.scorecard.id\n            this.props.toggleForm();\n        }\n        this.props.handleSubmit(\n            event,\n            scorecard\n        )\n    }\n\n\n    render () {\n        return (\n            <Card className=\"m-5\">\n                <CardBody>\n                    <CardTitle><h2>Scorecard Form</h2></CardTitle>\n                    <Form onSubmit={this.handleSubmit}>\n                        <FormGroup>\n                            <Label for=\"course_name\">Course Name</Label>\n                            <Input \n                                type=\"text\" name=\"course_name\"\n                                onChange={this.handleChange} \n                                placeholder={this.state.course_name}\n                                value={this.state.course_name}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"date_played\">Date Played</Label>\n                            <Input \n                                type=\"date\" \n                                name=\"date_played\" \n                                onChange={this.handleChange} placeholder={this.state.date_played}\n                                value={this.state.date_played}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"front_par\">Front Nine Par Rating</Label>\n                            <Input \n                                type=\"number\" \n                                name=\"front_par\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.front_par}\n                                value={this.state.front_par}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"back_par\">Back Nine Par Rating</Label>\n                            <Input \n                                type=\"number\" \n                                name=\"back_par\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.back_par}\n                                value={this.state.back_par}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"front_nine\">Front Nine Score</Label>\n                            <Input \n                                type=\"number\" name=\"front_nine_score\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.front_nine_score}\n                                value={this.state.front_nine_score}\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"back_nine\">Back Nine Score</Label>\n                            <Input \n                                type=\"number\" \n                                name=\"back_nine_score\" \n                                onChange={this.handleChange} \n                                placeholder={this.state.back_nine_score}\n                                value={this.state.back_nine_score}\n                                />\n                        </FormGroup>\n\n                        <Input type=\"submit\" value={this.props.scorecard ? \"Update Scorecard\":\"Submit new Scorecard!\"}/>\n                    </Form>\n\n                </CardBody>\n            </Card>\n        )\n    }\n}\n\nexport default ScorecardForm","import React, {Component} from 'react'\nimport {Card, CardBody, CardTitle, Button} from 'reactstrap'\nimport ScorecardForm from './ScorecardForm.js'\n\n\nclass Scorecard extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            formVisibile: false\n        }\n    }\n\n    toggleForm = () => {\n        this.setState({formVisibile: !this.state.formVisibile})\n    }\n\n    render () {\n        const {scorecard, handleDelete, handleUpdate} = this.props\n        return (\n            <React.Fragment>\n                {\n                    this.state.formVisibile ? \n                    <ScorecardForm \n                        userInfo={this.props.userInfo}\n                        key={scorecard.id}\n                        scorecard={scorecard} \n                        handleSubmit={this.props.handleUpdate}\n                        toggleForm={this.toggleForm} \n                    />\n                    :\n                    <Card key={scorecard.id} className=\"m-5\">\n                        <CardTitle className=\"m-2 d-flex\">\n                            <h3>{scorecard.course_name}</h3>\n                            <Button className=\"mr-5 ml-5\" outline color=\"warning\" onClick={this.toggleForm}>Edit</Button>\n                            <Button className=\"mr-5 ml-5\" outline color=\"danger\" onClick={() => handleDelete(scorecard)}>Delete</Button>\n                        </CardTitle>\n                        <CardBody className=\"m-2 border\">\n                            <h5>Front Nine: {scorecard.front_nine_score}</h5>\n                            <p>Front Nine Par: {scorecard.front_par}</p>\n                            <h5>Back Nine: {scorecard.back_nine_score}</h5>\n                            <p>Back Nine Par: {scorecard.back_par}</p>\n\n                            <h5>Combined Score: {scorecard.combined_score}</h5>\n                            <p>Total Par: {scorecard.total_par}</p>\n                        </CardBody>\n\n                    </Card>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default Scorecard","import React, {Component} from 'react'\nimport Scorecard from './Scorecard.js'\n\n\n\nclass Scorecards extends Component {\n\n    render () {\n        const {handleDelete, handleUpdate} = this.props\n        return (\n            <React.Fragment>\n                {\n                    this.props.scorecards.map(scorecard => \n                        <Scorecard \n                            userInfo={this.props.userInfo}\n                            key={scorecard.id}\n                            scorecard={scorecard}\n                            handleDelete={handleDelete}\n                            handleUpdate={handleUpdate}\n                        />\n                    )\n                }\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default Scorecards","import React, {Component} from 'react'\nimport {Navbar} from 'reactstrap'\nimport classnames from 'classnames'\nimport {HashRouter, Route, Link} from 'react-router-dom'\nimport Profile from './Profile.js'\nimport Scorecards from './Scorecards.js'\nimport ScorecardForm from './ScorecardForm.js'\n\nclass Nav extends Component {\n    state = {\n        activeTab: '1'\n    }\n\n    toggle = (tab) => {\n        if (this.state.activeTab !== tab) {\n            this.setState({\n                activeTab: tab\n            })\n        }\n    }\n\n    render () {\n        return (\n            <React.Fragment>\n                <Navbar className=\"container\">\n                    {/* <HashRouter basename='/trackstat'> */}\n                        <Link className={classnames({active: this.state.activeTab === '1'})} to='/trackstat/user/1/profile'>\n                            Profile\n                        </Link>\n\n                        <Link className={classnames({active: this.state.activeTab === '2'})} to='/trackstat/user/1/scorecards'>\n                            Scorecards\n                        </Link>\n\n                        <Link className={classnames({active: this.state.activeTab === '3'})} to='/trackstat/user/1/scorecardform'>\n                            Scorecard Form\n                        </Link>\n                        {/* <Route path=\"/profile\"\n                            render = {(props) => \n                            <Profile \n                                {...props} \n                                userInfo={this.state.userInfo}\n                                handleUpdate={this.handleUpdate}\n                            />} \n                        />\n                        <Route path=\"/scorecards\"\n                            render = {(props) => \n                            <Scorecards \n                                {...props}\n                                userInfo={this.state.userInfo}\n                                scorecards={this.state.scorecards}\n                                handleDelete={this.handleDelete}\n                                handleUpdate={this.handleUpdate}\n                            />} \n                        />\n\n                        <Route path=\"/scorecardform\" \n                            render = {(props) => \n                            <ScorecardForm {...props} \n                                userInfo={this.state.userInfo}\n                                handleSubmit={this.handleSubmit}\n                                handleChange={this.handleChange}\n                            />} \n                        /> */}\n                    {/* </HashRouter> */}\n                </Navbar>\n                {/* <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId=\"1\">\n                        <Row>\n                            <Col sm=\"12\">\n\n                            </Col>\n                        </Row>\n                    </TabPane>\n                </TabContent> */}\n\n\n            </React.Fragment>\n        )\n    }\n}\n\n\nexport default Nav","import React from 'react';\nimport './App.css';\nimport {BASE_URL} from './constants.js'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from './components/Header.js'\nimport Nav from './components/Nav.js'\nimport Login from './components/Login.js'\nimport Profile from './components/Profile.js'\nimport Scorecards from './components/Scorecards.js'\nimport ScorecardForm from './components/ScorecardForm.js'\nimport {Container, Card} from 'reactstrap'\n\nclass App extends React.Component {\n  state = {\n    scorecards: [],\n    userInfo: {}\n  }\n\n  getUser = (userLogin) => {\n    // event.preventDefault();\n    fetch(BASE_URL+`/users/${userLogin.user.id}`, {\n      method: \"GET\",\n      headers: {\n        'Authorization': `Bearer ${userLogin.token}`\n      }\n    })\n    .then(response => response.json())\n    // .then(resJson => console.log(resJson))\n    .then(resJson => {\n      this.setState ({\n        userInfo: resJson\n      })\n      console.log('User: ', resJson.name, 'ID: ', resJson.id)\n    })\n    .catch(error => console.error(error))\n  }\n\n\n  getScorecards = () => {\n    fetch(BASE_URL+`/users/${this.state.userInfo.id}/scorecards`)\n    .then(response => response.json())\n    // .then(resJson => console.log('Adding scorecard info', resJson))\n    .then(resJson => this.setState({scorecards: resJson}))\n    .catch(error => console.error(error))\n  }\n\n  addScorecard = (scorecard) => {\n    const copyScorecards = [...this.state.scorecards]\n    copyScorecards.unshift(scorecard)\n    this.setState({\n      scorecards: copyScorecards\n    })\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  handleSubmit = (event, formInputs) => {\n    event.preventDefault();\n    console.log('Form Inputs: ', formInputs);\n    fetch(BASE_URL+`/users/${this.state.userInfo.id}/scorecards`, {\n        method: \"POST\",\n        body: JSON.stringify(formInputs),\n        headers: {\n            'Accept':'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(response => response.json())\n    // .then(resJson => {console.log(resJson)})\n    .then(resJson => {\n        this.setState({\n          scorecards: [resJson, ...this.state.scorecards]\n        })\n        this.addScorecard(resJson)\n    })\n    .catch(error => console.error(error))\n  }\n\n  handleUpdate = (event, formInputs) => {\n    event.preventDefault();\n    fetch(BASE_URL+`/users/${this.state.userInfo.id}/scorecards/${formInputs.id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({formInputs}),\n        headers: {\n            'Accept':'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        }\n    })\n    .then(updateScorecard => {this.getScorecards()})\n    .catch(error => console.error(error))\n  }\n\n  handleDelete = (deletedScorecard) => {\n    fetch(BASE_URL+`/scorecards/${deletedScorecard.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      }\n    })\n    .then(json => {\n      this.setState(state => {\n        const scorecards = state.scorecards.filter((scorecard, index) => scorecard.id !== deletedScorecard.id)\n        return {\n          scorecards\n        }\n      })\n    })\n    .catch(error => console.error(error))\n  }\n\n  handleLogout = (event) => {\n    event.preventDefault();\n    this.setState({\n        userInfo: {}\n    })\n    console.log('User logged out')\n  }\n\n\n  componentDidMount = () => {\n    this.getScorecards()\n  }\n\n  render () {\n    return (\n      <div className=\"body\">\n        <Container className=\"mt-2 mb-2\">\n          <Header\n            handleLogin={this.handleLogin}\n            getUser={this.getUser}\n            userInfo={this.state.userInfo}\n            handleLogout={this.handleLogout}\n          />\n          {this.state.userInfo.id ? \n            <Router>\n              <Nav \n                userInfo={this.state.userInfo}\n                \n                // scorecards={this.state.scorecards}\n                // handleDelete={this.handleDelete}\n                // handleUpdate={this.handleUpdate}\n                // handleSubmit={this.handleSubmit}\n                // handleChange={this.handleChange}\n              />\n                <Container>\n                  <Route path=\"/trackstat/user/1//profile\"\n                    render = {(props) => \n                    <Profile \n                      {...props} \n                      userInfo={this.state.userInfo}\n                      handleUpdate={this.handleUpdate}\n                    />} \n                  />\n                  <Route path=\"/trackstat/user/1/scorecards\"\n                    render = {(props) => \n                      <Scorecards \n                        {...props}\n                        userInfo={this.state.userInfo}\n                        scorecards={this.state.scorecards}\n                        handleDelete={this.handleDelete}\n                        handleUpdate={this.handleUpdate}\n                      />} \n                  />\n\n                  <Route path=\"/trackstat/user/1/scorecardform\" \n                    render = {(props) => \n                    <ScorecardForm {...props} \n                      userInfo={this.state.userInfo}\n                      handleSubmit={this.handleSubmit}\n                      handleChange={this.handleChange}\n                    />} \n                  />\n                </Container>\n              \n            </Router>\n          :\n            <Container id=\"login-container\">\n              <h3>Welcome! Please Sign In!</h3>\n              <Card className=\"login-card\">\n                <Login \n                  handleLogin={this.handleLogin}\n                  getUser={this.getUser}\n                  userInfo={this.state.userInfo}\n                  handleLogout={this.handleLogout}\n                />\n              </Card>\n            </Container>\n          }\n        </Container>\n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}